!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).VueMapboxMap=t()}(this,(function(){"use strict";var e=function(e,t,n,i,o,r,a,s,p,d){"boolean"!=typeof a&&(p=s,s=a,a=!1);var c,u="function"==typeof n?n.options:n;if(e&&e.render&&(u.render=e.render,u.staticRenderFns=e.staticRenderFns,u._compiled=!0,o&&(u.functional=!0)),i&&(u._scopeId=i),r?(c=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),t&&t.call(this,p(e)),e&&e._registeredComponents&&e._registeredComponents.add(r)},u._ssrRegister=c):t&&(c=a?function(){t.call(this,d(this.$root.$options.shadowRoot))}:function(e){t.call(this,s(e))}),c)if(u.functional){var l=u.render;u.render=function(e,t){return c.call(t),l(e,t)}}else{var f=u.beforeCreate;u.beforeCreate=f?[].concat(f,c):[c]}return n},t={name:"VueMapboxMap",props:{accessToken:{type:String,required:!1,default:""},mapStyle:{type:[String,Object],default:"mapbox://styles/mapbox/light-v9"},attributionControl:{type:Boolean,default:!0},interactive:{type:Boolean,default:!0},transitionMode:{type:String,required:!1,default:"jump",validator:function(e){return-1!==["jump","ease","fly"].indexOf(e)}},lng:{type:[Number,String],required:!0},lat:{type:[Number,String],required:!0},zoom:{type:[Number,String],default:13},pitch:{type:[Number,String],default:60},bearing:{type:[Number,String],default:0}},data:function(){return{map:null}},computed:{mapScene:function(){return{center:[this.lng,this.lat],zoom:this.zoom,bearing:this.bearing,pitch:this.pitch}}},watch:{mapStyle:{deep:!0,handler:function(e){e&&this.map?this.map.setStyle(e):console.error("NOTE -> Unable to update map style to "+e+".")}},mapScene:function(e){if(e){if(!this.map)return void console.error("NOTE -> Map object not set");if(e.pitch<0||e.pitch>60)return void console.error("NOTE -> Unable to update pitch to "+e.pitch+". Exceeds permitted range.");if(e.bearing<0||e.bearing>360)return void console.error("NOTE -> Unable to update bearing to "+e.bearing+". Exceeds permitted range.");"jump"===this.transitionMode?this.map.jumpTo(e):"ease"===this.transitionMode?this.map.easeTo(e):"fly"===this.transitionMode&&this.map.flyTo(e)}}},mounted:function(){var e=this;void 0!==window.mapboxgl?this.instanceMap():import("mapbox-gl").then((function(t){window.mapboxgl=t.default,e.instanceMap()}))},methods:{instanceMap:function(){var e=this;this.accessToken?window.mapboxgl.accessToken=this.accessToken:console.warn("NOTE -> No access token has been provided. If using Mapbox hosted tiles then this omission may break your map."),this.map=new window.mapboxgl.Map({container:this.$refs.mapboxMapDiv,style:this.mapStyle,interactive:this.interactive,center:[this.lng,this.lat],zoom:this.zoom,bearing:this.bearing,pitch:this.pitch,attributionControl:this.attributionControl}),this.map.on("load",(function(){e.$emit("mapbox-ready",e.map)})),this.map.on("remove",(function(){e.$emit("mapbox-destroyed")}))}}},n=function(){var e=this.$createElement;return(this._self._c||e)("div",{ref:"mapboxMapDiv"})};n._withStripped=!0;return e({render:n,staticRenderFns:[]},undefined,t,undefined,false,undefined,!1,void 0,void 0,void 0)}));
